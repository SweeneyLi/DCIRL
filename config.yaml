dataset:
  name: "miniImageNet"
  file: "train"
  path: "/home/share/image_classification/mini-imagenet"
  image_size: (224, 224, 3)
model:
  load_state_dict:
#    path: '/home/lixy/DCIRL/checkout/miniImageNet/backup/16epoch_92.99%acc.pth'
#    start_stage: 2
#    start_lr: 0.01
    path: '/home/lixy/DCIRL/checkout/miniImageNet/backup/10epoch_91.38%acc.pth'
    start_stage: 3
    start_lr: 0.0005
  basic_module:
    name: 'resnet18'
    pretrained: true
    out_dim: 512
  middle_module:
    features_list:
      - (64, 16)
  senior_module:
    features_list:
      - 2048
loss:
  coefficient:
    whole_different_coefficient: 1
    common_coefficient: 2
    different_coefficient: 1
    off_diag_coefficient: 0.005
  stage_epoch_threshold: 8
train:
  batch_size: 200
  epoch: 200
  lr: 0.01
optimizer:
  # sgd, adam
  optimizer_type: "sgd"
  momentum: 0.9
  weight_decay: !!python/object/apply:eval [ 5e-4 ]
  nesterov: true
  # step, multistep, exp
  scheduler_type: "step"
  lr_decay_step: 20
  lr_decay_rate: 0.5
output:
  root_path: "/home/lixy/DCIRL/checkout"
  min_save_epoch: 1
log:
  env: "train-env-py"
  nrow: 1
  scale: 3
  height: 256
  width: 256
  update_frequency: 10

